@model SKRIPSI_PROJECT.Models.Helper

<!-- Style to set the size of checkbox -->
<style>
    input.larger-checkbox {
        width: 40px;
        height: 40px;
    }
</style>



<div class="row">
    <div class="col-md-12">
        <!-- BEGIN PROFILE CONTENT -->
        <div class="profile-content">
            <div class="row">
                <div class="col-md-12">
                    <div class="portlet light bordered">
                        <div class="portlet-title tabbable-line">
                            <div class="caption caption-md">
                                <i class="icon-globe theme-font hide"></i>
                                <span class="caption-subject bold uppercase font-dark">Data Equipment</span>
                            </div>
                            <div class="actions">
                                <div class="btn-group-devided" data-toggle="buttons">
                                    <button style="margin-right: 10px;" id="btn-add-equipment-modal" class="btn bg-red-thunderbird bg-font-red-thunderbird">
                                        <i class="fa fa-plus"></i>
                                    </button>
                                </div>
                            </div>
                        </div>
                        <div class="portlet-body">
                            <table class="table table-striped table-hover table-bordered" id="table_equipment">
                                <thead>
                                    <tr class="bg-red-thunderbird bg-font-red-thunderbird" style="text-align:center">
                                        <th rowspan="2" style="display:none;"> id </th>
                                        <th rowspan="2"> TAG NUMBER </th>
                                        <th rowspan="2"> AREA </th>
                                        <th colspan="6" style="text-align:center"> SPESIFIKASI </th>
                                        <th colspan="3" style="text-align:center"> MATERIAL </th>
                                        <th rowspan="2"> MTTR </th>
                                        <th rowspan="2"> MTTF </th>
                                        <th rowspan="2"> SCHEDULE SERVICE </th>
                                        <th rowspan="2"> OVERDUE </th>
                                        <th rowspan="2"> LAST SERVICE </th>
                                        <th rowspan="2" width="10%"> ACTION</th>
                                        <th rowspan="2" style="display:none;"> id </th>
                                    </tr>
                                    <tr class="bg-red-thunderbird bg-font-red-thunderbird">
                                        <th> MANUFACTURE </th>
                                        <th> CAPACITY </th>
                                        <th> FLA </th>
                                        <th> RPM </th>
                                        <th> VOLT </th>
                                        <th> FRAME </th>
                                        <th> DE </th>
                                        <th> NDE </th>
                                        <th> WINDING </th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- END PROFILE CONTENT -->
    </div>
</div>

<div id="modal-master-equipment" class="modal fade" data-width="760" data-backdrop="static" tabindex="-1">
    <div class="modal-header bg-red-thunderbird bg-font-red-thunderbird">
        <button type="button" class="close cancel" data-dismiss="modal" aria-hidden="true"></button>
        <h4 class="modal-title">Data Equipment</h4>
    </div>
    <form action="#" id="form_master_equipment" class="form-horizontal">
        <div class="form-body">
            <div class="alert alert-danger display-hide">
                <button class="close" data-close="alert"></button> Ada beberapa kolom yang belum terisi, silahkan cek kembali
            </div>
            <div class="modal-body">
                <input type="hidden" id="txtequipmentid" class="form-control" />
                <div class="row" style="margin-bottom: -5px;">
                    <div class="form-group">
                        <label class="control-label col-md-3">Tag No</label>
                        <div class="col-md-9" style="padding-right: 40px; !important;">
                            @*<select id="txtTagNo" name="cityktp" class="select2me form-control show-tick">
                                <option value="">- Silahkan Pilih -</option>
                            </select>*@
                            @{
                                List<SelectListItem> listTagNo = new List<SelectListItem>();
                                for (var i = 0; i < @Model.listTagNo.Count; i++)
                                {
                                    listTagNo.Add(new SelectListItem
                                    {
                                        Text = @Model.listTagNo[i].md_value,
                                        Value = @Model.listTagNo[i].md_id.ToString()
                                    });
                                }
                            }
                            @Html.DropDownListFor(model => model.listTagNo[0].md_id, listTagNo, "- Silahkan Pilih -", new { id = "txtTagNo", @Name = "provhome", @class = "select2me form-control show-tick home-address" })
                        </div>
                    </div>
                </div>
                <div class="row" style="margin-bottom: -5px;">
                    <div class="form-group">
                        <label class="control-label col-md-3">Area</label>
                        <div class="col-md-9" style="padding-right: 40px; !important;">
                            @{
                                List<SelectListItem> listArea = new List<SelectListItem>();
                                for (var i = 0; i < @Model.listArea.Count; i++)
                                {
                                    listArea.Add(new SelectListItem
                                    {
                                        Text = @Model.listArea[i].area_name,
                                        Value = @Model.listArea[i].area_id.ToString()
                                    });
                                }
                            }
                            @Html.DropDownListFor(model => model.listTagNo[0].md_id, listArea, "- Silahkan Pilih -", new { id = "txtArea", @Name = "provhome", @class = "select2me form-control show-tick home-address" })
                        </div>
                    </div>
                </div>
                <div class="row" style="margin-bottom: -5px;">
                    <div class="form-group">
                        <label class="control-label col-md-3">Manufacture</label>
                        <div class="col-md-9" style="padding-right: 40px; !important;">
                            @{
                                List<SelectListItem> listManufacture = new List<SelectListItem>();
                                for (var i = 0; i < @Model.listManufacture.Count; i++)
                                {
                                    listManufacture.Add(new SelectListItem
                                    {
                                        Text = @Model.listManufacture[i].manufacture_name,
                                        Value = @Model.listManufacture[i].manufacture_id.ToString()
                                    });
                                }
                            }
                            @Html.DropDownListFor(model => model.listTagNo[0].md_id, listManufacture, "- Silahkan Pilih -", new { id = "txtManufacture", @Name = "provhome", @class = "select2me form-control show-tick home-address" })
                        </div>
                    </div>
                </div>
                <div class="row" style="margin-bottom: -5px;">
                    <div class="form-group">
                        <label class="control-label col-md-3">Capacity</label>
                        <div class="col-md-9" style="padding-right: 40px; !important;">
                            @{
                                List<SelectListItem> listCapacity = new List<SelectListItem>();
                                for (var i = 0; i < @Model.listCapacity.Count; i++)
                                {
                                    listCapacity.Add(new SelectListItem
                                    {
                                        Text = @Model.listCapacity[i].md_value,
                                        Value = @Model.listCapacity[i].md_id.ToString()
                                    });
                                }
                            }
                            @Html.DropDownListFor(model => model.listTagNo[0].md_id, listCapacity, "- Silahkan Pilih -", new { id = "txtCapacity", @Name = "provhome", @class = "select2me form-control show-tick home-address" })
                        </div>
                    </div>
                </div>
                <div class="row" style="margin-bottom: -5px;">
                    <div class="form-group">
                        <label class="control-label col-md-3">FLA</label>
                        <div class="col-md-9" style="padding-right: 40px; !important;">
                            @{
                                List<SelectListItem> listFLA = new List<SelectListItem>();
                                for (var i = 0; i < @Model.listFLA.Count; i++)
                                {
                                    listFLA.Add(new SelectListItem
                                    {
                                        Text = @Model.listFLA[i].md_value,
                                        Value = @Model.listFLA[i].md_id.ToString()
                                    });
                                }
                            }
                            @Html.DropDownListFor(model => model.listTagNo[0].md_id, listFLA, "- Silahkan Pilih -", new { id = "txtFla", @Name = "provhome", @class = "select2me form-control show-tick home-address" })
                        </div>
                    </div>
                </div>
                <div class="row" style="margin-bottom: -5px;">
                    <div class="form-group">
                        <label class="control-label col-md-3">RPM</label>
                        <div class="col-md-9" style="padding-right: 40px; !important;">
                            @{
                                List<SelectListItem> listRpm = new List<SelectListItem>();
                                for (var i = 0; i < @Model.listRPM.Count; i++)
                                {
                                    listRpm.Add(new SelectListItem
                                    {
                                        Text = @Model.listRPM[i].md_value,
                                        Value = @Model.listRPM[i].md_id.ToString()
                                    });
                                }
                            }
                            @Html.DropDownListFor(model => model.listTagNo[0].md_id, listRpm, "- Silahkan Pilih -", new { id = "txtRpm", @Name = "provhome", @class = "select2me form-control show-tick home-address" })
                        </div>
                    </div>
                </div>
                <div class="row" style="margin-bottom: -5px;">
                    <div class="form-group">
                        <label class="control-label col-md-3">VOLT</label>
                        <div class="col-md-9" style="padding-right: 40px; !important;">
                            @{
                                List<SelectListItem> listVolt = new List<SelectListItem>();
                                for (var i = 0; i < @Model.listVolt.Count; i++)
                                {
                                    listVolt.Add(new SelectListItem
                                    {
                                        Text = @Model.listVolt[i].md_value,
                                        Value = @Model.listVolt[i].md_id.ToString()
                                    });
                                }
                            }
                            @Html.DropDownListFor(model => model.listTagNo[0].md_id, listVolt, "- Silahkan Pilih -", new { id = "txtVolt", @Name = "provhome", @class = "select2me form-control show-tick home-address" })
                        </div>
                    </div>
                </div>
                <div class="row" style="margin-bottom: -5px;">
                    <div class="form-group">
                        <label class="control-label col-md-3">Frame</label>
                        <div class="col-md-9" style="padding-right: 40px; !important;">
                            @{
                                List<SelectListItem> listFrame = new List<SelectListItem>();
                                for (var i = 0; i < @Model.listFrame.Count; i++)
                                {
                                    listFrame.Add(new SelectListItem
                                    {
                                        Text = @Model.listFrame[i].md_value,
                                        Value = @Model.listFrame[i].md_id.ToString()
                                    });
                                }
                            }
                            @Html.DropDownListFor(model => model.listTagNo[0].md_id, listFrame, "- Silahkan Pilih -", new { id = "txtFrame", @Name = "provhome", @class = "select2me form-control show-tick home-address" })
                        </div>
                    </div>
                </div>
                <div class="row" style="margin-bottom: -5px;">
                    <div class="form-group">
                        <label class="control-label col-md-3">Material</label>
                        <div class="col-md-9" style="padding-right: 40px; !important;">
                            <label class="mt-radio" style="padding-right: 10px; !important;">
                                <input type="radio" name="tkstatus" value="bearing" class="radio-material" /> Bearing
                                <span></span>
                            </label>
                            <label class="mt-radio">
                                <input type="radio" name="tkstatus" value="wiring" class="radio-material" /> Wiring
                                <span></span>
                            </label>
                        </div>
                    </div>
                </div>
                <div class="row bearing" style="margin-bottom: -5px;">
                    <div class="form-group">
                        <label class="control-label col-md-3">DE</label>
                        <div class="col-md-3" style="padding-right: 40px; !important;">
                            @{
                                List<SelectListItem> listDE = new List<SelectListItem>();
                                for (var i = 0; i < @Model.listDE.Count; i++)
                                {
                                    listDE.Add(new SelectListItem
                                    {
                                        Text = @Model.listDE[i].material_value,
                                        Value = @Model.listDE[i].material_id.ToString()
                                    });
                                }
                            }
                            @Html.DropDownListFor(model => model.listTagNo[0].md_id, listDE, "- Silahkan Pilih -", new { id = "txtDe", @Name = "provhome", @class = "select2me form-control show-tick home-address" })
                        </div>
                        <label class="control-label col-md-3">NDE</label>
                        <div class="col-md-3" style="padding-right: 40px; !important;">
                            @{
                                List<SelectListItem> listNde = new List<SelectListItem>();
                                for (var i = 0; i < @Model.listNDE.Count; i++)
                                {
                                    listNde.Add(new SelectListItem
                                    {
                                        Text = @Model.listNDE[i].material_value,
                                        Value = @Model.listNDE[i].material_id.ToString()
                                    });
                                }
                            }
                            @Html.DropDownListFor(model => model.listTagNo[0].md_id, listNde, "- Silahkan Pilih -", new { id = "txtNde", @Name = "provhome", @class = "select2me form-control show-tick home-address" })
                        </div>
                    </div>
                </div>
                <div class="row wiring" style="margin-bottom: -5px;">
                    <div class="form-group">
                        <label class="control-label col-md-3">Winding</label>
                        <div class="col-md-9" style="padding-right: 40px; !important;">
                            @{
                                List<SelectListItem> listWiring = new List<SelectListItem>();
                                for (var i = 0; i < @Model.listWiring.Count; i++)
                                {
                                    listWiring.Add(new SelectListItem
                                    {
                                        Text = @Model.listWiring[i].material_value,
                                        Value = @Model.listWiring[i].material_id.ToString()
                                    });
                                }
                            }
                            @Html.DropDownListFor(model => model.listTagNo[0].md_id, listWiring, "- Silahkan Pilih -", new { id = "txtWiring", @Name = "provhome", @class = "select2me form-control show-tick home-address" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" data-dismiss="modal" class="btn cancel btn-outline dark">Batal</button>
                <button type="button" class="btn red-thunderbird" id="btn-add-equipment">Submit</button>
            </div>
        </div>
    </form>
</div>

<div id="form_repair_equipment" class="modal fade" data-width="1360" data-backdrop="static" tabindex="-1">
    <div class="modal-header bg-red-thunderbird bg-font-red-thunderbird">
        <button type="button" class="close cancel" data-dismiss="modal" aria-hidden="true"></button>
        <h4 class="modal-title">HISTORY EQUIPMENT</h4>
    </div>
    <form action="#" id="form_repairment" class="form-horizontal">
        <div class="form-body">
            <div class="alert alert-danger display-hide">
                <button class="close" data-close="alert"></button> Ada beberapa kolom yang belum terisi, silahkan cek kembali
            </div>
            <div class="modal-body">
                <input type="hidden" id="txtequipid" class="form-control" />
                <input type="hidden" id="txtinputdate" class="form-control" />
                <div class="row" style="margin-bottom: -5px;">
                    <div class="form-group">
                        <label class="control-label col-md-2">Tag No.</label>
                        <div class="col-md-2" style="padding-right: 40px; !important;">
                            <label class="control-label col-md-2" id="label-tagno"></label>
                        </div>
                        <label class="control-label col-md-1">Area</label>
                        <div class="col-md-2" style="padding-right: 40px; !important;">
                            <label class="control-label col-md-2" id="label-area"></label>
                        </div>
                    </div>
                </div>
                <div class="row" style="margin-bottom: -5px;">
                    <div class="form-group">
                        <label class="control-label col-md-2">Tanggal Perbaikan</label>
                        <div class="col-md-2" style="padding-right: 40px; !important;">
                            <div class="input-group date date-picker" data-date-format="dd-mm-yyyy">
                                <input type="text" id="txtRepairDate" name="birthdate" class="form-control" readonly />
                                <span class="input-group-btn">
                                    <button class="btn default" type="button">
                                        <i class="fa fa-calendar"></i>
                                    </button>
                                </span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row" style="margin-bottom: -5px;">
                    <div class="form-group">
                        <label class="control-label col-md-2">MTTR</label>
                        <div class="col-md-2" style="padding-right: 40px; !important;">
                            <input type="text" id="txtMttr" maxlength="100" name="area" class="form-control" disabled />
                        </div>
                        <label class="control-label col-md-1">MTBF</label>
                        <div class="col-md-2" style="padding-right: 40px; !important;">
                            <input type="text" id="txtMttf" maxlength="100" name="area" class="form-control" disabled />
                        </div>
                        <label class="control-label col-md-1">Overdue</label>
                        <div class="col-md-2" style="padding-right: 40px; !important;">
                            <input type="text" id="txtOverdue" maxlength="100" name="area" class="form-control" disabled />
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" data-dismiss="modal" class="btn cancel btn-outline dark">Batal</button>
                    <button type="button" class="btn red-thunderbird" id="btn-add-repairment">Submit</button>
                </div>
                <table class="table table-striped table-hover table-bordered" id="table_history">
                    <thead>
                        <tr class="bg-red-thunderbird bg-font-red-thunderbird">
                            <th style="display:none;"> id </th>
                            <th style="display:none;"> id </th>
                            <th> START </th>
                            <th> END </th>
                            <th> DURASI </th>
                            <th> STATUS </th>
                            <th width="30%"> ACTION </th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>
            </div>

        </div>

    </form>


</div>

<div id="form_finish_repairment" class="modal fade" data-width="660" data-backdrop="static" tabindex="-1">
    <div class="modal-header bg-red-thunderbird bg-font-red-thunderbird">
        <button type="button" class="close cancel" data-dismiss="modal" aria-hidden="true"></button>
        <h4 class="modal-title">PERBAIKAN SELESAI</h4>
    </div>
    <form action="#" id="form_repairment" class="form-horizontal">
        <div class="form-body">
            <div class="alert alert-danger display-hide">
                <button class="close" data-close="alert"></button> Ada beberapa kolom yang belum terisi, silahkan cek kembali
            </div>
            <div class="modal-body">
                <input type="hidden" id="txtrepairid" class="form-control" />
                <input type="hidden" id="txtstartdate" class="form-control" />
                <div class="row" style="margin-bottom: -5px;">
                    <div class="form-group">
                        <label class="control-label col-md-3">Selesai Perbaikan</label>
                        <div class="col-md-6" style="padding-right: 40px; !important;">
                            <div class="input-group date date-picker" data-date-format="dd-mm-yyyy">
                                <input type="text" id="txtFinishDate" name="birthdate" class="form-control" readonly />
                                <span class="input-group-btn">
                                    <button class="btn default" type="button">
                                        <i class="fa fa-calendar"></i>
                                    </button>
                                </span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" data-dismiss="modal" class="btn cancel btn-outline dark">Batal</button>
                    <button type="button" class="btn red-thunderbird" id="btn-finish-repairment">Submit</button>
                </div>
            </div>

        </div>

    </form>


</div>
<script src="~/assets/global/plugins/jquery.min.js" type="text/javascript"></script>
<script src="~/assets/pages/scripts/form-validation-emp-registration.js" type="text/javascript"></script>

<script>
    $(document).ready(function () {

        // BEGIN OPEN ACTIVE MENU
        $('#master-menu').addClass('active ');
        $('#master-equipment-menu').addClass('active');

        /* INIT TABLE MASTER equipment */
        function initData() {

            var tableDocument = $('#table_equipment').DataTable({
                "bJQueryUI": true,
                "destroy": true,
                "bProcessing": true,
                "deferRender": true,
                "bFilter": true,
                "bInfo": true,
                "paging": true,
                "autoWidth": false,
                "ordering": false,
                "sAjaxSource": '/master/getlistequipment',
                "sAjaxDataProp": "",
                "aoColumns": [
                    { "mDataProp": "equipment_id", "visible": false, "searchable": true, "targets": [0] },
                    { "mDataProp": "val_tag_no" },
                    { "mDataProp": "area_name" },
                    { "mDataProp": "manufacture_name" },
                    { "mDataProp": "capacity" },
                    { "mDataProp": "fla" },
                    { "mDataProp": "rpm" },
                    { "mDataProp": "volt" },
                    { "mDataProp": "frame" },
                    { "mDataProp": "de" },
                    { "mDataProp": "nde" },
                    { "mDataProp": "wiring_value" },
                    { "mDataProp": "mttr" },
                    { "mDataProp": "mttf" },
                    { "mDataProp": "schedule_service" },
                    { "mDataProp": "overdue" },
                    { "mDataProp": "last_service" },
                    //{
                    //    "mData": function (data, row) {
                    //        if (data.last_service == '' || data.last_service == null) {
                    //            return data.schedule_service
                    //        } else {
                    //            return data.last_service
                    //        }
                    //    }
                    //},
                    {
                        "mData": function (data, row) {
                            return '<a class="btn bg-red-thunderbird bg-font-red-thunderbird edit-status-equipment" href="javascript:;">EDIT</a><br/>' +
                                '<a class="btn bg-red-thunderbird bg-font-red-thunderbird detail-status-equipment" href="javascript:;">DETAIL</a>';
                        }
                    },
                    { "mDataProp": "created_date", "visible": false, "searchable": true, "targets": [0] },
                ]
            });

        };

        /* INIT TABLE MASTER equipment */
        function initRepairment() {

            var tableDocument = $('#table_history').DataTable({
                "bJQueryUI": true,
                "destroy": true,
                "bProcessing": true,
                "deferRender": true,
                "bFilter": true,
                "bInfo": true,
                "paging": true,
                "autoWidth": false,
                "ordering": false,
                "sAjaxSource": '/master/GetListEquipmentRepairment?id=' + $('#txtequipid').val(),
                "sAjaxDataProp": "",
                "aoColumns": [
                    { "mDataProp": "equip_history_id", "visible": false, "searchable": true, "targets": [0] },
                    { "mDataProp": "equipment_id", "visible": false, "searchable": true, "targets": [0] },
                    { "mDataProp": "start_date" },
                    { "mDataProp": "end_date" },
                    { "mDataProp": "duration" },
                    { "mDataProp": "status" },
                    {
                        "mData": function (data, row) {
                            return '<div class="input-group" >' +
                                '<button type="button" class="btn red-thunderbird btn-finish-equipment">SELESAI</button>' +
                                '</span>' +
                                    '</div>';
                        }
                    },
                ]
            });

        };

        initData();
        
        
        /* BTN MODAL MASTER equipment */
        $(document).on('click', '#btn-add-equipment-modal', function (e) {

            $('#form_master_equipment')[0].reset();
            $('#txtequipmentId').val('');
            $('#form_master_equipment .form-control').val('');
            $('.has-error').removeClass('has-error');
            $('.fa-warning').removeClass('fa-warning');
            $('.has-success').removeClass('has-success');
            $('.fa-check').removeClass('fa-check');
            $('.alert-danger').hide();
            $('#modal-master-equipment').modal('show');

        });

       

        /* BTN MODAL MASTER equipment */
        $(document).on('click', '.btn-finish-equipment', function (e) {
            var oTable = $('#table_history').dataTable();
            var id = oTable.fnGetData($(this).parent().parent(), 0);
            var equipid = oTable.fnGetData($(this).parent().parent(), 1);
            var startDate = oTable.fnGetData($(this).parent().parent(), 2);
            $('#txtrepairid').val(id);
            $('#txtequipid').val(equipid);
            $('#txtstartdate').val(startDate);
            $('#form_finish_repairment').modal('show');
          /*  confirmFinish();*/
        });

        /* BTN MODAL MASTER equipment */
        $(document).on('click', '#btn-finish-repairment', function (e) {
            var dateFrom = $('#txtstartdate').val();
            var dateTo = $('#txtFinishDate').val();

            var d1 = dateFrom.split("-");
            var d2 = dateTo.split("-");

            var from = new Date(d1[2], parseInt(d1[1]) - 1, d1[0]);  // -1 because months are from 0 to 11
            var to = new Date(d2[2], parseInt(d2[1]) - 1, d2[0]);
            if (dateTo == '') {
                swal("Tanggal selesai tidak boleh kosong");
            }
            if (from > to) {
                swal("Tanggal selesai perbaikan tidak boleh kurang dari tanggal mulai perbaikan " + dateFrom);
            } 
            else {
                confirmFinish();
            }
            
        });

        /* BTN MODAL MASTER equipment */
        $(document).on('click', '.detail-status-equipment', function (e) {
            var oTable = $('#table_equipment').dataTable();
            var id = oTable.fnGetData($(this).parent().parent(), 0);
            var tagNo = oTable.fnGetData($(this).parent().parent(), 1);
            var area = oTable.fnGetData($(this).parent().parent(), 2);
            var mttr = oTable.fnGetData($(this).parent().parent(), 12);
            var mttf = oTable.fnGetData($(this).parent().parent(), 13);
            var overdue = oTable.fnGetData($(this).parent().parent(), 14);
            var createdDate = oTable.fnGetData($(this).parent().parent(), 18);
            $('#label-tagno').text(tagNo);
            $('#label-area').text(area);
            $('#txtMttr').val(mttr);
            $('#txtMttf').val(mttf);
            $('#txtOverdue').val(overdue);
            $('#txtequipid').val(id);
            $('#txtinputdate').val(createdDate);
            initRepairment();
            $('#form_repair_equipment').modal('show');
        });


        /* SAVE MASTER equipment */
        function saveequipment() {

            var eq = new FormData();
            eq.append('tag_no', $('#txtTagNo').val());
            eq.append('area_id', $('#txtArea').val());
            eq.append('manufacture_id', $('#txtManufacture').val());
            eq.append('capacity', $('#txtCapacity').val());
            eq.append('fla', $('#txtFla').val());
            eq.append('rpm', $('#txtRpm').val());
            eq.append('volt', $('#txtVolt').val());
            eq.append('frame', $('#txtFrame').val());
            eq.append('bearing_de', $('#txtDe').val());
            eq.append('bearing_nde', $('#txtNde').val());
            eq.append('wiring_diameter', $('#txtWiring').val());
            eq.append("equipment_id", $('#txtequipmentid').val());

            // DO POST
            $.ajax({
                type: "POST",
                url: "/master/saveequipment",
                data: eq,
                contentType: false,
                processData: false,
                success: function (result) {
                    App.unblockUI();
                    $('#form_master_equipment')[0].reset();
                    $('#txtequipmentid').val('');
                    $('#form_master_equipment .form-control').val('');
                    $('.has-error').removeClass('has-error');
                    $('.fa-warning').removeClass('fa-warning');
                    $('.has-success').removeClass('has-success');
                    $('.fa-check').removeClass('fa-check');
                    $('.alert-danger').hide();
                    $('#modal-master-equipment').modal('hide');
                    if (result == "timeout") {
                        swal({
                            title: "Session Habis!",
                            text: "Waktu Session Login Anda Berakhir",
                            type: "warning"
                        }, function () {
                            window.location.href = "/home/signout"
                        });
                    }
                    if (result == true) {
                        swal({
                            title: "Berhasil!",
                            text: "Data Berhasil Disimpan",
                            type: "success"
                        }, function () {
                            initData();
                        });
                    }
                    if (result == false) {
                        swal({
                            title: "Gagal!",
                            text: "Ada Kesalahan Penyimpanan Data",
                            type: "warning"
                        }, function () {
                            initData();
                        });
                    }

                    console.log(result);

                },
                error: function (e) {
                    App.unblockUI();
                    swal("Error!", "Periksa Kembali Koneksi Anda", "error");
                    console.log("ERROR: ", e);
                }
            });

        }

        /* SAVE MASTER equipment */
        function SaveEquipmentRepair() {

            var repairment = new FormData();
            repairment.append('start_date', $('#txtRepairDate').val());
            repairment.append("equipment_id", $('#txtequipid').val());
            repairment.append("status", 'PROCESS');

            // DO POST
            $.ajax({
                type: "POST",
                url: "/master/SaveEquipmentRepairment",
                data: repairment,
                contentType: false,
                processData: false,
                success: function (result) {
                    App.unblockUI();
                    $('#form_repairment')[0].reset();
                    $('.has-error').removeClass('has-error');
                    $('.fa-warning').removeClass('fa-warning');
                    $('.has-success').removeClass('has-success');
                    $('.fa-check').removeClass('fa-check');
                    $('.alert-danger').hide();
                    /*$('#form_repair_equipment').modal('hide');*/
                    if (result == "timeout") {
                        swal({
                            title: "Session Habis!",
                            text: "Waktu Session Login Anda Berakhir",
                            type: "warning"
                        }, function () {
                            window.location.href = "/home/signout"
                        });
                    }
                    if (result == true) {
                        swal({
                            title: "Berhasil!",
                            text: "Data Berhasil Disimpan",
                            type: "success"
                        }, function () {
                            initRepairment();
                           
                        });
                    }
                    if (result == false) {
                        swal({
                            title: "Gagal!",
                            text: "Ada Kesalahan Penyimpanan Data",
                            type: "warning"
                        }, function () {
                            initData();
                        });
                    }

                    console.log(result);

                },
                error: function (e) {
                    App.unblockUI();
                    swal("Error!", "Periksa Kembali Koneksi Anda", "error");
                    console.log("ERROR: ", e);
                }
            });

        }



        /* CONFIRM SAVE MASTER equipment */
        function confirmSaveequipment() {
            swal({
                title: "Konfirmasi Data",
                text: "Apa Anda Yakin Data Ingin Disimpan ?",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Ya, Simpan!",
                cancelButtonText: "Tidak, Batalkan Proses!",
                showLoaderOnConfirm: true,
                closeOnConfirm: false,
                closeOnCancel: false
            }, function (isConfirm) {
                if (isConfirm) {

                    App.blockUI({
                        boxed: true
                    });

                    saveequipment();

                } else {
                    App.unblockUI();
                    swal("Batal", "Data Tidak Jadi Disimpan", "error");
                }
            });
        }

        /* CONFIRM SAVE MASTER equipment */
        function confirmFinish() {
            swal({
                title: "Konfirmasi Data",
                text: "Apa Anda Yakin Data Ingin Disimpan ?",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Ya, Simpan!",
                cancelButtonText: "Tidak, Batalkan Proses!",
                showLoaderOnConfirm: true,
                closeOnConfirm: false,
                closeOnCancel: false
            }, function (isConfirm) {
                if (isConfirm) {

                    App.blockUI({
                        boxed: true
                    });

                    var repairment = new FormData();
                    repairment.append('start_date', $('#txtFinishDate').val());
                    repairment.append("equip_history_id", $('#txtrepairid').val());
                    repairment.append("equipment_id", $('#txtequipid').val());
                    repairment.append("status", 'FINISH');

                    // DO POST
                    $.ajax({
                        type: "POST",
                        url: "/master/SaveEquipmentRepairment",
                        data: repairment,
                        contentType: false,
                        processData: false,
                        success: function (result) {
                            App.unblockUI();
                            $('#form_repairment')[0].reset();
                            $('.has-error').removeClass('has-error');
                            $('.fa-warning').removeClass('fa-warning');
                            $('.has-success').removeClass('has-success');
                            $('.fa-check').removeClass('fa-check');
                            $('.alert-danger').hide();
                            /*$('#form_repair_equipment').modal('hide');*/
                            if (result == "timeout") {
                                swal({
                                    title: "Session Habis!",
                                    text: "Waktu Session Login Anda Berakhir",
                                    type: "warning"
                                }, function () {
                                    window.location.href = "/home/signout"
                                });
                            }
                            if (result == true) {
                                swal({
                                    title: "Berhasil!",
                                    text: "Data Berhasil Disimpan",
                                    type: "success"
                                }, function () {
                                    initRepairment();
                                    $.ajax({
                                        type: "GET",
                                        url: "/master/getdetailequipment?id=" + $('#txtequipid').val(),
                                        success: function (x) {
                                            $('#txtMttr').val(x.mttr);
                                            $('#txtMttf').val(x.mttf);
                                            $('#txtOverdue').val(x.overdue);
                                        },
                                        error: function (e) {
                                            swal("Error!", "", "error");
                                        }
                                    });
                                });
                            }
                            if (result == false) {
                                swal({
                                    title: "Gagal!",
                                    text: "Ada Kesalahan Penyimpanan Data",
                                    type: "warning"
                                }, function () {
                                    initData();
                                });
                            }

                            console.log(result);

                        },
                        error: function (e) {
                            App.unblockUI();
                            swal("Error!", "Periksa Kembali Koneksi Anda", "error");
                            console.log("ERROR: ", e);
                        }
                    });

                } else {
                    App.unblockUI();
                    swal("Batal", "Data Tidak Jadi Disimpan", "error");
                }
            });
        }

        /* CONFIRM SAVE MASTER equipment */
        function confirmSaveequipmentRepair() {
            swal({
                title: "Konfirmasi Data",
                text: "Apa Anda Yakin Data Ingin Disimpan ?",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Ya, Simpan!",
                cancelButtonText: "Tidak, Batalkan Proses!",
                showLoaderOnConfirm: true,
                closeOnConfirm: false,
                closeOnCancel: false
            }, function (isConfirm) {
                if (isConfirm) {

                    App.blockUI({
                        boxed: true
                    });

                    SaveEquipmentRepair();

                } else {
                    App.unblockUI();
                    swal("Batal", "Data Tidak Jadi Disimpan", "error");
                }
            });
        }


        /* CONFIRM EDIT STATUS MASTER equipment */
        function confirmEditStatusequipment(id) {
            swal({
                title: "Konfirmasi Data",
                text: "Apa Anda Yakin Status Ingin Diubah ?",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Ya, Ubah!",
                cancelButtonText: "Tidak, Batalkan Proses!",
                showLoaderOnConfirm: true,
                closeOnConfirm: false,
                closeOnCancel: false
            }, function (isConfirm) {
                if (isConfirm) {

                    App.blockUI({
                        boxed: true
                    });

                    editStatusequipment(id);

                } else {
                    App.unblockUI();
                    swal("Batal", "Status Tidak Jadi Diubah", "error");
                }
            });
        }


        /* BTN SUBMIT MASTER equipment */
        $(document).on("click", "#btn-add-equipment", function (e) {

            if ($('#form_master_equipment').validate().form()) {
                App.blockUI({
                    boxed: true
                });

                confirmSaveequipment();

            }

        });

        /* BTN SUBMIT MASTER equipment */
        $(document).on("click", "#btn-add-repairment", function (e) {
            var dateFrom = $('#txtinputdate').val();
            var dateTo = $('#txtRepairDate').val();
            var d1 = dateFrom.split("-");
            var d2 = dateTo.split("-");

            var from = new Date(d1[2], parseInt(d1[1]) - 1, d1[0]);  // -1 because months are from 0 to 11
            var to = new Date(d2[2], parseInt(d2[1]) - 1, d2[0]);
            if (from > to) {
                swal("Tanggal mulai perbaikan tidak boleh kurang dari tanggal " + dateFrom);
            }
            else if ($('#txtRepairDate').val() == '') {
                swal("Tanggal mulai perbaikan tidak boleh kosong");
            } else {
                confirmSaveequipmentRepair();
            }
        });

        /* BTN EDIT STATUS MASTER equipment */
        $(document).on("click", ".edit-status-equipment", function (e) {
            var oTable = $('#table_equipment').dataTable();
            var id = oTable.fnGetData($(this).parent().parent(), 0);

            App.blockUI({
                boxed: true
            });

            getDetailequipment(id);

        });


        /* BTN DELETE MASTER equipment */
        $(document).on("click", ".delete-status-equipment", function (e) {
            var oTable = $('#table_equipment').dataTable();
            var id = oTable.fnGetData($(this).parent().parent(), 0);

            App.blockUI({
                boxed: true
            });

            confirmDeleteequipment(id);

        });


        /* GET DETAIL MASTER equipment */
        function getDetailequipment(id) {
            $.ajax({
                type: "GET",
                url: "/master/getdetailequipment?id=" + id,
                success: function (result) {
                    $('#txtTagNo').val(result.tag_no);
                    $('#txtArea').val(result.area_id);
                    $('#txtManufacture').val(result.manufacture_id);
                    $('#txtCapacity').val(result.capacity);
                    $('#txtFla').val(result.fla);
                    $('#txtRpm').val(result.rpm);
                    $('#txtVolt').val(result.volt);
                    $('#txtFrame').val(result.frame);
                    $('#txtDe').val(result.bearing_de);
                    $('#txtNde').val(result.bearing_nde);
                    $('#txtWiring').val(result.wiring_diameter);
                    $('#txtequipmentid').val(result.equipment_id);
                    $('#btn-add-equipment').text('Ubah');
                    $('#modal-master-equipment').modal('show');

                    App.unblockUI();
                },
                error: function (e) {
                    swal("Error!", "", "error");
                }
            });

        }


        /* DELETE MASTER equipment */
        function deleteequipment(id) {
            $.ajax({
                type: "POST",
                url: "/master/deleteequipment/" + id,
                success: function (result) {
                    App.unblockUI();
                    if (result == "timeout") {
                        swal({
                            title: "Session Habis!",
                            text: "Waktu Session Login Anda Berakhir",
                            type: "warning"
                        }, function () {
                            window.location.href = "/home/signout"
                        });
                    }
                    if (result == true) {
                        swal({
                            title: "Berhasil!",
                            text: "Data Berhasil Dihapus",
                            type: "success"
                        }, function () {
                            initData();
                        });
                    }
                    if (result == false) {
                        swal({
                            title: "Gagal!",
                            text: "Ada Kesalahan Penyimpanan Data",
                            type: "warning"
                        }, function () {
                            initData();
                        });
                    }
                },
                error: function (e) {
                    App.unblockUI();
                    swal("Error!", "", "error");
                }
            });
        }


        /* CONFIRM DELETE MASTER equipment */
        function confirmDeleteequipment(id) {
            swal({
                title: "Konfirmasi Data",
                text: "Apa Anda Yakin Data Ingin Dihapus ?",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Ya, Hapus!",
                cancelButtonText: "Tidak, Batalkan Proses!",
                showLoaderOnConfirm: true,
                closeOnConfirm: false,
                closeOnCancel: false
            }, function (isConfirm) {
                if (isConfirm) {

                    App.blockUI({
                        boxed: true
                    });

                    deleteequipment(id);

                } else {
                    App.unblockUI();
                    swal("Batal!", "Data Tidak Jadi Dihapus", "error");
                }
            });
        }

        /*GetListTagno();*/
        //GetListArea();
        //GetListManufacture();
        //GetListCapacity();
        //GetListRPM();
        //GetListFLA();
        //GetListDE();
        //GetListNDE();
        //GetListVolt();
        //GetListFrame();
        //GetListWiring();
        // get city
        function GetListTagno() {
            $.ajax({
                type: "GET",
                url: "/master/getlisttagno",
                success: function (result) {
                    $('#txtTagNo').html('<option value="">- Pilih Tag Number -</option>');
                    $.each(result, function (i) {
                        $('#txtTagNo').append('<option value=' + this.md_id + '>' + this.md_value + '</option>');
                    });
                },
                error: function (e) {
                    swal("Error!", "", "error");
                }
            });
        }

        // get city
        function GetListArea() {
            $.ajax({
                type: "GET",
                url: "/master/getlistarea",
                success: function (result) {
                    $('#txtArea').html('<option value="">- Pilih Area -</option>');
                    $.each(result, function (i) {
                        $('#txtArea').append('<option value=' + this.area_id + '>' + this.area_name + '</option>');
                    });
                },
                error: function (e) {
                    swal("Error!", "", "error");
                }
            });
        }

        function GetListManufacture() {
            $.ajax({
                type: "GET",
                url: "/master/getlistmanufacture",
                success: function (result) {
                    $('#txtManufacture').html('<option value="">- Pilih Manufacture -</option>');
                    $.each(result, function (i) {
                        $('#txtManufacture').append('<option value=' + this.manufacture_id + '>' + this.manufacture_name + '</option>');
                    });
                },
                error: function (e) {
                    swal("Error!", "", "error");
                }
            });
        }

        function GetListCapacity() {
            $.ajax({
                type: "GET",
                url: "/master/getlistcapacity",
                success: function (result) {
                    $('#txtCapacity').html('<option value="">- Pilih Capacity -</option>');
                    $.each(result, function (i) {
                        $('#txtCapacity').append('<option value=' + this.md_id + '>' + this.md_value + '</option>');
                    });
                },
                error: function (e) {
                    swal("Error!", "", "error");
                }
            });
        }

        function GetListFLA() {
            $.ajax({
                type: "GET",
                url: "/master/getlistfla",
                success: function (result) {
                    $('#txtFla').html('<option value="">- Pilih FLA -</option>');
                    $.each(result, function (i) {
                        $('#txtFla').append('<option value=' + this.md_id + '>' + this.md_value + '</option>');
                    });
                },
                error: function (e) {
                    swal("Error!", "", "error");
                }
            });
        }

        function GetListRPM() {
            $.ajax({
                type: "GET",
                url: "/master/getlistrpm",
                success: function (result) {
                    $('#txtRpm').html('<option value="">- Pilih RPM -</option>');
                    $.each(result, function (i) {
                        $('#txtRpm').append('<option value=' + this.md_id + '>' + this.md_value + '</option>');
                    });
                },
                error: function (e) {
                    swal("Error!", "", "error");
                }
            });
        }

        function GetListVolt() {
            $.ajax({
                type: "GET",
                url: "/master/getlistvolt",
                success: function (result) {
                    $('#txtVolt').html('<option value="">- Pilih Volt -</option>');
                    $.each(result, function (i) {
                        $('#txtVolt').append('<option value=' + this.md_id + '>' + this.md_value + '</option>');
                    });
                },
                error: function (e) {
                    swal("Error!", "", "error");
                }
            });
        }

        function GetListFrame() {
            $.ajax({
                type: "GET",
                url: "/master/getlistframe",
                success: function (result) {
                    $('#txtFrame').html('<option value="">- Pilih Frame -</option>');
                    $.each(result, function (i) {
                        $('#txtFrame').append('<option value=' + this.md_id + '>' + this.md_value + '</option>');
                    });
                },
                error: function (e) {
                    swal("Error!", "", "error");
                }
            });
        }

        function GetListDE() {
            $.ajax({
                type: "GET",
                url: "/master/getlistde",
                success: function (result) {
                    $('#txtDe').html('<option value="">- Pilih DE -</option>');
                    $.each(result, function (i) {
                        $('#txtDe').append('<option value=' + this.material_id + '>' + this.material_value + '</option>');
                    });
                },
                error: function (e) {
                    swal("Error!", "", "error");
                }
            });
        }

        function GetListNDE() {
            $.ajax({
                type: "GET",
                url: "/master/getlistnde",
                success: function (result) {
                    $('#txtNde').html('<option value="">- Pilih Frame -</option>');
                    $.each(result, function (i) {
                        $('#txtNde').append('<option value=' + this.material_id + '>' + this.material_value + '</option>');
                    });
                },
                error: function (e) {
                    swal("Error!", "", "error");
                }
            });
        }

        function GetListWiring() {
            $.ajax({
                type: "GET",
                url: "/master/getlistwiring",
                success: function (result) {
                    $('#txtWiring').html('<option value="">- Pilih Frame -</option>');
                    $.each(result, function (i) {
                        $('#txtWiring').append('<option value=' + this.material_id + '>' + this.material_value + '</option>');
                    });
                },
                error: function (e) {
                    swal("Error!", "", "error");
                }
            });
        }

        $('.bearing').hide();
        $('.wiring').hide();

        /* change status bpjs ketenagakerjaan */
        $(document).on("click", ".radio-material", function (e) {

            var tkStatus = $("input[name='tkstatus']:checked").val();

            if (tkStatus == 'bearing') {
                $('#txtDe').val('');
                $('#txtNde').val('');
                $('#txtWiring').val('');
                $('.bearing').show();
                $('.wiring').hide();
            } else {
                $('#txtDe').val('');
                $('#txtNde').val('');
                $('#txtWiring').val('');
                $('.bearing').hide();
                $('.wiring').show();
            }

        });
    });
</script>